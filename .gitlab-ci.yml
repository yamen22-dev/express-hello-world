stages:
  - build
  - merge
  - deploy
build-code-job:
  stage: build
  image: node:18-buster
  script:
  - echo "Building Docker image..."
  - echo "Docker image built successfully."
merge_job:
  stage: merge
  script:
    - if [ "$CI_COMMIT_BRANCH" == "feature-branch" ]; then
        # Voer deze job alleen uit op de feature-branch
    - echo "Merging code to main branch..."
    - git checkout main
    - git merge feature
    - git push origin main 
    - else
      echo "Skipping merge job on branch $CI_COMMIT_BRANCH."
    - fi  
deploy-code-job:
  stage: deploy
  image: node:18-buster
  variables:
# TODO: add link to github repository
    GITHUB_URL: "git@github.com:yamen22-dev/express-hello-world.git"
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval `ssh-agent -s`
    - ssh-add <(echo "$PRIVATE_SSH_KEY")
    - mkdir -p ~/.ssh
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
    - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  script:
# TODO: push main to github
      - if [ "$CI_COMMIT_BRANCH" == "main" ]; then
        # Voer deze job alleen uit op de main-branch
      - echo "Deploying code to server..."
      # Voeg hier commando's toe om de code naar de server te deployen
      - git remote add github $GITHUB_URL
      - git config --global user.email "yayoub@st.noorderpoort.nl" 
      - git config --global user.name "yamen22-dev"
      - git push github $CI_COMMIT_REF_NAME
      - else
        echo "Skipping deploy job on branch $CI_COMMIT_BRANCH."
      - fi
